plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.1.4'

	//[spring rest docs] asciidocotr 플러그인
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.flab'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	asciidoctorExt // asciidoctor를 확장하는 종속성에 대한 구성 선언
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	/**
	 * Test Implementation
	 */
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// 3. REST Docs Implementation 추가
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

// 4. sinppetsDir 추가
ext {
	snippetsDir = file('build/genertated-snippets')
}

// 5. test task snippetsDir
tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

//6. asciidocotor task
tasks.named('asciidoctor') {
	configurations 'asciidoctorExt'
	inputs.dir snippetsDir
	dependsOn test // 테스트 이후에 실행
}
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
	// 기존에 존재하는 docs를 삭제해준다.
 }

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

//https://backtony.tistory.com/37